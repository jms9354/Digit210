1.)The Tempest, like a typical Shakespearean play, contains five acts, each of which contains scenes. Both acts and scenes are encoded as division (<div>) elements. Scroll into the document far enough so you can see the first act and the first scene to see how this is coded. Now, try writing XPath expressions to answer the following questions:


A.)How can XPath tell apart the acts and the scenes?

-//body/div/head There were 5 acts

B.)What XPath would find just the acts?

-//body/div/head

C.)What XPath would find just the scenes?

-//body/div/div

D.)What XPath would find just the scenes inside Act II? (The Results window for the previous questions will give you a good clue: look at the numbers inside square bracket)

-//body/div[2]/div

2.)Stage directions (<stage> occur in a variety of places in this XML file.

A.)Write an XPath to find all the stage directions in the document wherever they may be.

-//stage


B.)Write an XPath to reach into Act 3 and find all the stage directions inside that act.

-//body/div[3]//stage


C.)What XPath would find all of the stage directions that are nested inside a metrical line (<l>), that is, between the starting <l> and the ending </l>? How many stage directions are inside lines?

-//l  1818


D.)What XPath would find all of the stage directions that are nested directly inside a speech (<sp>) and outside of the lines within a speech?

-//sp 648


E.)Run the XPath that finds all the stage directions wherever they are in the whole play again and study the results. Look for stage directions that are not inside a speech (<sp>) or metrical line (<l>). What other element holds stage directions when they are not inside a speech or line?

-149 are not in the <sp> or <l>


F.)Now, can you write a simple XPath expression that returns all of the stage directions that are not inside a speech or a line? (Check your Results window to make sure none of them are nested inside a speech or line.) How many are there?



3.) Let's take a look at some attributes in this document. The @ symbol in XPath indicates the attribute axis.

A.)Write an XPath to find all the speeches (<sp>) and then step over to isolate their @who attributes. (The Results window shows you just the attribute values.) Record your XPath expression.


B.) Often we use attributes in XPath to filter elements, and isolate, say, only the speeches spoken by a particular character. To filter results, we use a predicate expression written inside square brackets. Look for examples of predicates in our XPath tutorial that filter elements based on their attributes. Then write an XPath expression with a predicate to return all of the speeches in the play spoken by Prospero. Record your expression and how many results you get. Try changing the speaker to Miranda: how many speeches are spoken by her?




